
Job {
  Name = TanyaLinuxJob
  JobDefs = BaseJob
  # Enabled = no

  Client = TanyaLinux
  File Set = TanyaLinuxFileSet
  Pool = TanyaLinuxPool

  # 0 в имени для красивой сортировки с файлами томов, там в этом месте количество томов
  Write Bootstrap = "/backups/TanyaLinux/%j-%i-0-%l.bsr"
}


Client {
  Name = TanyaLinux
  Passive = yes

  Address = "{{BAREOS__FD_TANYA_LINUX_ADDRESS}}"
  Password = "{{BAREOS__FD_TANYA_LINUX_PASSWORD}}"

  Hard Quota = 400 gb
  Soft Quota = 200 gb
}


FileSet {
  Name = TanyaLinuxFileSet

  Include {
    Options {
      Compression = GZIP
      Signature = XXH128
    }

    File = /home/tanya
    File = /etc/bareos

    Exclude Dir Containing = .nobackup
  }

  Exclude {
    File = /home/tanya/snap

    File = /home/tanya/.local
    File = /home/tanya/.cache

    File = /home/tanya/.java
    File = /home/tanya/.dotnet
    File = /home/tanya/.npm

    File = /home/tanya/.oh-my-zsh
    File = /home/tanya/.vscode
    File = /home/tanya/.jupyter
    File = /home/tanya/.ipython
  }
}


Storage {
  Name = TanyaLinuxStorage

  Address = "{{BAREOS__SD_ADDRESS}}"
  Password = "{{BAREOS__SD_PASSWORD}}"

  Device = TanyaLinuxDevice
  Media Type = TanyaLinuxDeviceMT
}


Pool {
  Name = TanyaLinuxPool
  Storage = TanyaLinuxStorage

  # NumVols нужно, потому что с Maximum Volume Bytes bareos будет пытаться создать
  # файлы с одинаковыми именами
  Label Format = "$JobName-$JobId-$NumVols-$Level.vol"

  # На случай, если бэкапы будут заливаться на удаленный файловый сервер
  # (там бывают ограничения по максимальному размеру файла)
  Maximum Volume Bytes = 3 gb

  # Гарантирует, что разные job-ы будут писать в разные тома
  Maximum Volume Jobs = 1

  # Скрипты в RunBefore у job обеспечивают удаление устаревших томов (скользящее окно)
  Recycle = no
}
